rule trim:
    input:
        forward="{prefix}%s%s/{sample}_R1_UMI.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['rejoin_samples']),
        reverse="{prefix}%s%s/{sample}_R3_UMI.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['rejoin_samples'])
    output:
        pairedforward="{prefix}%s%s/Paired/{sample, .*?}_R1_UMI.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim']),
        pairedreverse="{prefix}%s%s/Paired/{sample, .*?}_R2_UMI.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim']),
    log:
        "{prefix}%s%s/{sample}.log" % (config['dirs']['logs'], config['stepnames']['trim'])
    benchmark:
        "{prefix}%s%s/{sample}.benchmark" % (config['dirs']['benchmarks'], config['stepnames']['trim'])
    conda:
      "envs/spike_trim.yaml"
    threads:
        16
    params:
        unpairedforward="{prefix}%s%s/Unpaired/{sample, .*?}_R1.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim']),
        unpairedreverse="{prefix}%s%s/Unpaired/{sample, .*?}_R2.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim'])
    shell:
        # if project directory for unpaired reads does not exist, we have to create it here since it is no regular snakemake output
        "mkdir -p `dirname {params.unpairedforward}` 2> {log}"
        " & java"
        " -Xmx4g"
        " -XX:ParallelGCThreads={threads}"
        " -jar /home/joj02hit/miniconda3/envs/trimmo/share/trimmomatic-0.39-2/trimmomatic.jar "
        " PE -threads {threads} -phred33"
        " {input.forward}"
        " {input.reverse}"
        " {output.pairedforward}"
        " {params.unpairedforward}"
        " {output.pairedreverse}"
        " {params.unpairedreverse}"
        " ILLUMINACLIP:${{CONDA_PREFIX}}/share/trimmomatic-0.33-1/home/joj02hit/miniconda3/envs/trimmo/share/trimmomatic-0.39-2/adapters/TruSeq3-PE.fa:2:30:10 CROP:149 LEADING:10 TRAILING:10 SLIDINGWINDOW:4:15 MINLEN:54"
        " >> {log} 2>&1"

rule trim_singleend:
    input:
        forward="{prefix}%s%s/{sample}_R1.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['rejoin_samples']),
    output:
        unpairedforward="{prefix}%s%s/Unpaired/{sample, .*?}_R1.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim']),
    log:
        "{prefix}%s%s/{sample}.log" % (config['dirs']['logs'], config['stepnames']['trim'])
    benchmark:
        "{prefix}%s%s/{sample}.benchmark" % (config['dirs']['benchmarks'], config['stepnames']['trim'])
    conda:
      "envs/spike_trim.yaml"
    threads:
        16
    shell:
        "java"
        " -Xmx4g"
        " -XX:ParallelGCThreads={threads}"
        " -jar /home/joj02hit/miniconda3/envs/trimmo/share/trimmomatic-0.39-2/trimmomatic.jar"
        " SE -threads {threads} -phred33"
        " {input.forward}"
        " {output.unpairedforward}"
        " ILLUMINACLIP:/home/joj02hit/miniconda3/envs/trimmo/share/trimmomatic-0.39-2/TruSeq3-SE.fa:2:30:10 CROP:99 LEADING:10 TRAILING:10 SLIDINGWINDOW:4:15 MINLEN:36"
        " > {log} 2>&1"


'''
rule trimmer:
    # adaptor trimming
    input:
        #forward="{prefix}%s%s/{sample}_R1.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['rejoin_samples']),
        #reverse="{prefix}%s%s/{sample}_R3.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['rejoin_samples']),
        #bin_LocatIt="{prefix}%strimmer-2.0.3.jar" % (config['dirs']['references']),
    output:
        #dir = "{prefix}%s%s/trimmer/" % (config['dirs']['intermediate'], config['stepnames']['trim']),
	#pairedforward="{prefix}%s%s/trimmer/{sample, .*?}_Cut_R1.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim']),
        #pairedreverse="{prefix}%s%s/trimmer/{sample, .*?}_Cut_R2.fastq.gz" % (config['dirs']['intermediate'], config['stepnames']['trim']),	
    log:
        "{prefix}%s%s/trimmer/{sample}.log" % (config['dirs']['logs'], config['stepnames']['trim'])
    benchmark:
        "{prefix}%s%s/trimmer/{sample}.benchmark" % (config['dirs']['benchmarks'], config['stepnames']['trim'])
    conda:
        "envs/spike_trim.yaml"
    params:
	#"{prefix}%s%s/trimmer/" % (config['dirs']['intermediate'], config['stepnames']['trim']),
    threads:
        1  # since this tool function doesn't support multithreading
    shell:
        "java"
        " -Xmx12G"
        " -jar {input.bin_LocatIt}"
        " -fq1 {input.forward}"
        " -fq2 {input.reverse}"
        " -xt"
        " -minFractionRead 25"
        " -out_loc {output.dir}"
        " >> {log} 2>&1"
'''
